{
  "name": "corth",
  "word": "name",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_global_statement"
      }
    },
    "_global_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "include_statement"
        },
        {
          "type": "SYMBOL",
          "name": "namespace_scope"
        },
        {
          "type": "SYMBOL",
          "name": "macro_definition"
        },
        {
          "type": "SYMBOL",
          "name": "proc_definition"
        },
        {
          "type": "SYMBOL",
          "name": "global_allocation"
        }
      ]
    },
    "include_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        }
      ]
    },
    "namespace_scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "namespace"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_global_statement"
          }
        },
        {
          "type": "STRING",
          "value": "endnamespace"
        }
      ]
    },
    "proc_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "proc"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        },
        {
          "type": "FIELD",
          "name": "arg",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_type"
            }
          }
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "FIELD",
          "name": "return",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_type"
            }
          }
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "SYMBOL",
          "name": "end_block"
        }
      ]
    },
    "global_allocation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "memory"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "name",
                  "content": {
                    "type": "SYMBOL",
                    "name": "name"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "size",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_compile_time_constant"
                  }
                }
              ]
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "and"
                  },
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "FIELD",
                        "name": "name",
                        "content": {
                          "type": "SYMBOL",
                          "name": "name"
                        }
                      },
                      {
                        "type": "FIELD",
                        "name": "size",
                        "content": {
                          "type": "SYMBOL",
                          "name": "_compile_time_constant"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "macro_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "macro"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_local_statement"
              },
              {
                "type": "SYMBOL",
                "name": "include_statement"
              },
              {
                "type": "SYMBOL",
                "name": "namespace_scope"
              },
              {
                "type": "SYMBOL",
                "name": "macro_definition"
              },
              {
                "type": "SYMBOL",
                "name": "proc_definition"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "endmacro"
        }
      ]
    },
    "_local_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_primitive"
        },
        {
          "type": "SYMBOL",
          "name": "local_allocation"
        },
        {
          "type": "SYMBOL",
          "name": "if_statement"
        },
        {
          "type": "SYMBOL",
          "name": "while_do_statement"
        },
        {
          "type": "SYMBOL",
          "name": "let_statement"
        },
        {
          "type": "SYMBOL",
          "name": "peek_statement"
        },
        {
          "type": "SYMBOL",
          "name": "cast_statement"
        },
        {
          "type": "SYMBOL",
          "name": "sizeof_statement"
        },
        {
          "type": "STRING",
          "value": "break"
        },
        {
          "type": "STRING",
          "value": "return"
        }
      ]
    },
    "local_allocation": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "memory"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "FIELD",
                  "name": "name",
                  "content": {
                    "type": "SYMBOL",
                    "name": "name"
                  }
                },
                {
                  "type": "FIELD",
                  "name": "size",
                  "content": {
                    "type": "SYMBOL",
                    "name": "_compile_time_constant"
                  }
                }
              ]
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "and"
                  },
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "FIELD",
                        "name": "name",
                        "content": {
                          "type": "SYMBOL",
                          "name": "name"
                        }
                      },
                      {
                        "type": "FIELD",
                        "name": "size",
                        "content": {
                          "type": "SYMBOL",
                          "name": "_compile_time_constant"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "STRING",
          "value": "in"
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "end_block"
          }
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "else_block"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "end_block"
        }
      ]
    },
    "let_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "SYMBOL",
          "name": "name_list"
        },
        {
          "type": "SYMBOL",
          "name": "end_block"
        }
      ]
    },
    "peek_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "peek"
        },
        {
          "type": "SYMBOL",
          "name": "name_list"
        },
        {
          "type": "SYMBOL",
          "name": "end_block"
        }
      ]
    },
    "while_do_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "SYMBOL",
          "name": "do_block"
        },
        {
          "type": "SYMBOL",
          "name": "end_block"
        }
      ]
    },
    "cast_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "cast"
        },
        {
          "type": "SYMBOL",
          "name": "_type"
        }
      ]
    },
    "sizeof_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "sizeof"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "builtin_type"
            },
            {
              "type": "SYMBOL",
              "name": "name"
            }
          ]
        }
      ]
    },
    "else_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_local_statement"
          }
        },
        {
          "type": "STRING",
          "value": "else"
        }
      ]
    },
    "end_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_local_statement"
          }
        },
        {
          "type": "STRING",
          "value": "end"
        }
      ]
    },
    "do_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_local_statement"
          }
        },
        {
          "type": "STRING",
          "value": "do"
        }
      ]
    },
    "name_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "STRING",
          "value": "in"
        }
      ]
    },
    "number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "char_literal"
        }
      ]
    },
    "_compile_time_constant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "char_literal"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "builtin_type"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "intrinsic": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "*2"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "%"
        },
        {
          "type": "STRING",
          "value": "u*"
        },
        {
          "type": "STRING",
          "value": "u*2"
        },
        {
          "type": "STRING",
          "value": "u/"
        },
        {
          "type": "STRING",
          "value": "u%"
        },
        {
          "type": "STRING",
          "value": "!!"
        },
        {
          "type": "STRING",
          "value": "||"
        },
        {
          "type": "STRING",
          "value": "&&"
        },
        {
          "type": "STRING",
          "value": "^^"
        },
        {
          "type": "STRING",
          "value": "!"
        },
        {
          "type": "STRING",
          "value": "|"
        },
        {
          "type": "STRING",
          "value": "&"
        },
        {
          "type": "STRING",
          "value": "^"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": "!="
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": "<="
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": "@8"
        },
        {
          "type": "STRING",
          "value": "!8"
        },
        {
          "type": "STRING",
          "value": "@16"
        },
        {
          "type": "STRING",
          "value": "!16"
        },
        {
          "type": "STRING",
          "value": "@32"
        },
        {
          "type": "STRING",
          "value": "!32"
        },
        {
          "type": "STRING",
          "value": "@64"
        },
        {
          "type": "STRING",
          "value": "!64"
        },
        {
          "type": "STRING",
          "value": "@bool"
        },
        {
          "type": "STRING",
          "value": "!bool"
        },
        {
          "type": "STRING",
          "value": "!set"
        },
        {
          "type": "STRING",
          "value": "!reset"
        },
        {
          "type": "STRING",
          "value": "syscall0"
        },
        {
          "type": "STRING",
          "value": "syscall1"
        },
        {
          "type": "STRING",
          "value": "syscall2"
        },
        {
          "type": "STRING",
          "value": "syscall3"
        },
        {
          "type": "STRING",
          "value": "syscall4"
        },
        {
          "type": "STRING",
          "value": "syscall5"
        },
        {
          "type": "STRING",
          "value": "syscall6"
        },
        {
          "type": "STRING",
          "value": "inc"
        },
        {
          "type": "STRING",
          "value": "dec"
        },
        {
          "type": "STRING",
          "value": "neg"
        },
        {
          "type": "STRING",
          "value": "abs"
        },
        {
          "type": "STRING",
          "value": "iabs"
        },
        {
          "type": "STRING",
          "value": "sqr"
        },
        {
          "type": "STRING",
          "value": "usqr"
        },
        {
          "type": "STRING",
          "value": "is-zero"
        },
        {
          "type": "STRING",
          "value": "isn-zero"
        },
        {
          "type": "STRING",
          "value": "is-neg"
        },
        {
          "type": "STRING",
          "value": "isn-neg"
        },
        {
          "type": "STRING",
          "value": "is-pos"
        },
        {
          "type": "STRING",
          "value": "isn-pos"
        },
        {
          "type": "STRING",
          "value": "is-range"
        },
        {
          "type": "STRING",
          "value": "isn-range"
        },
        {
          "type": "STRING",
          "value": "is-null"
        },
        {
          "type": "STRING",
          "value": "isn-null"
        },
        {
          "type": "STRING",
          "value": "lower-base"
        },
        {
          "type": "STRING",
          "value": "upper-base"
        },
        {
          "type": "STRING",
          "value": "avg2"
        },
        {
          "type": "STRING",
          "value": "avg3"
        },
        {
          "type": "STRING",
          "value": "clip"
        },
        {
          "type": "STRING",
          "value": "sort2"
        },
        {
          "type": "STRING",
          "value": "sort3"
        },
        {
          "type": "STRING",
          "value": "@inc8"
        },
        {
          "type": "STRING",
          "value": "@dec8"
        },
        {
          "type": "STRING",
          "value": "@inc64"
        },
        {
          "type": "STRING",
          "value": "@dec64"
        },
        {
          "type": "STRING",
          "value": "memcpy8"
        },
        {
          "type": "STRING",
          "value": "memcpy8i"
        },
        {
          "type": "STRING",
          "value": "memcpy64"
        },
        {
          "type": "STRING",
          "value": "memcpy64i"
        },
        {
          "type": "STRING",
          "value": "memcmp8"
        },
        {
          "type": "STRING",
          "value": "memcmp64"
        },
        {
          "type": "STRING",
          "value": "memcmp8-wl"
        },
        {
          "type": "STRING",
          "value": "memcmp64-wl"
        },
        {
          "type": "STRING",
          "value": "dup"
        },
        {
          "type": "STRING",
          "value": "drop"
        },
        {
          "type": "STRING",
          "value": "dropi"
        },
        {
          "type": "STRING",
          "value": "swp"
        },
        {
          "type": "STRING",
          "value": "rot"
        },
        {
          "type": "STRING",
          "value": "roti"
        },
        {
          "type": "STRING",
          "value": "arot"
        },
        {
          "type": "STRING",
          "value": "aroti"
        },
        {
          "type": "STRING",
          "value": "sizeof(int)"
        },
        {
          "type": "STRING",
          "value": "sizeof(uint)"
        },
        {
          "type": "STRING",
          "value": "sizeof(ptr)"
        },
        {
          "type": "STRING",
          "value": "sizeof(char)"
        },
        {
          "type": "STRING",
          "value": "sizeof(file-ptr)"
        }
      ]
    },
    "binary_prefix": {
      "type": "PATTERN",
      "value": "0[bB]"
    },
    "octal_prefix": {
      "type": "PATTERN",
      "value": "0[oO]"
    },
    "hexadecimal_prefix": {
      "type": "PATTERN",
      "value": "0[oO]"
    },
    "number_literal": {
      "type": "PATTERN",
      "value": "((0[bB][0-1]+)|0[oO][0-7]+|0[xX][0-9a-fA-F]+|-?([0-9]+))"
    },
    "char_literal": {
      "type": "PATTERN",
      "value": "\\'(([^\\\\])|(\\\\([xX][0-9a-fA-F][0-9a-fA-F]|[0nt\\'\\\"\\\\])))\\'"
    },
    "string_literal": {
      "type": "PATTERN",
      "value": "\\\"(([^\\\"]|(\\\\\\\"))*[^\\\\])?\\\""
    },
    "builtin_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "int"
        },
        {
          "type": "STRING",
          "value": "uint"
        },
        {
          "type": "STRING",
          "value": "i8"
        },
        {
          "type": "STRING",
          "value": "i16"
        },
        {
          "type": "STRING",
          "value": "i32"
        },
        {
          "type": "STRING",
          "value": "i64"
        },
        {
          "type": "STRING",
          "value": "u8"
        },
        {
          "type": "STRING",
          "value": "u16"
        },
        {
          "type": "STRING",
          "value": "u32"
        },
        {
          "type": "STRING",
          "value": "u64"
        },
        {
          "type": "STRING",
          "value": "ptr"
        },
        {
          "type": "STRING",
          "value": "file-desc"
        },
        {
          "type": "STRING",
          "value": "bool"
        }
      ]
    },
    "singleton": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        },
        {
          "type": "STRING",
          "value": "NULLPTR"
        }
      ]
    },
    "name": {
      "type": "PATTERN",
      "value": "[a-zA-Z_0-9\\/_\\-.:?!()\\[\\]{}=+@%<>]+"
    },
    "_primitive": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "intrinsic"
        },
        {
          "type": "SYMBOL",
          "name": "char_literal"
        },
        {
          "type": "SYMBOL",
          "name": "number_literal"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "builtin_type"
        },
        {
          "type": "SYMBOL",
          "name": "singleton"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "inline_comment": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\/\\/.*\\n"
      }
    },
    "multiline_comment": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\/\\*([^*]|\\*[^\\/])*\\*\\/"
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": " "
    },
    {
      "type": "PATTERN",
      "value": "\\t"
    },
    {
      "type": "PATTERN",
      "value": "\\n"
    },
    {
      "type": "SYMBOL",
      "name": "inline_comment"
    },
    {
      "type": "SYMBOL",
      "name": "multiline_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
